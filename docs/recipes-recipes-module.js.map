{"version":3,"sources":["./src/app/recipes/recipes-resolver.service.ts","./src/app/recipes/recipes.module.ts","./src/app/recipes/recipe-list/recipe-items/recipe-items.component.ts","./src/app/recipes/recipe-list/recipe-items/recipe-items.component.html","./src/app/recipes/recipe-start/recipe-start.component.ts","./src/app/recipes/recipe-start/recipe-start.component.html","./src/app/auth/auth.guard.ts","./src/app/recipes/recipe-details/recipe-details.component.ts","./src/app/recipes/recipe-details/recipe-details.component.html","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/recipes/recipe-list/recipes-routing.module.ts","./src/app/recipes/recipe-edit/recipe-edit.component.ts","./src/app/recipes/recipe-edit/recipe-edit.component.html"],"names":[],"mappings":"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","file":"recipes-recipes-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  Resolve,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\n\r\nimport { Recipe } from './recipe.model';\r\nimport { DataStorageService } from '../shared/data-storage.service';\r\nimport { RecipeService } from './recipe.service';\r\nimport { Store } from '@ngrx/store';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { map, switchMap, take } from 'rxjs/operators';\r\nimport * as fromApp from '../store/app.reducer';\r\nimport * as RecipesActions from '../recipes/store/recipe.actions';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RecipesResolverService implements Resolve<any> {\r\n  constructor(\r\n    private store: Store<fromApp.AppState>,\r\n    private actions$: Actions\r\n  ) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.store.select('recipes').pipe(\r\n      take(1),\r\n      map(recipesState => {\r\n        return recipesState.recipes;\r\n      }),\r\n      switchMap(recipes => {\r\n        if (recipes.length === 0) {\r\n          this.store.dispatch(new RecipesActions.FetchRecipes());\r\n          return this.actions$.pipe(\r\n            ofType(RecipesActions.SET_RECIPES),\r\n            take(1)\r\n          );\r\n        } else {\r\n          return of(recipes);\r\n        }\r\n      })\r\n    );\r\n    //   const recipes = this.recipesService.getRecipes();\r\n    // this.store.dispatch(new RecipesActions.FetchRecipes());\r\n    // return this.actions$.pipe(\r\n    //   ofType(RecipesActions.SET_RECIPES),\r\n    //   take(1)\r\n    // );\r\n    //   if (recipes.length === 0) {\r\n    //     return this.dataStorageService.fetchRecipes();\r\n    //   } else {\r\n    //     return recipes;\r\n    //   }\r\n    // }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RecipesComponent } from './recipes.component';\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\nimport { RecipeDetailsComponent } from './recipe-details/recipe-details.component';\nimport { RecipeItemsComponent } from './recipe-list/recipe-items/recipe-items.component';\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RecipesRoutingModule } from './recipe-list/recipes-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeDetailsComponent,\n    RecipeItemsComponent,\n    RecipeStartComponent,\n    RecipeEditComponent,\n  ],\n  exports:[\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeDetailsComponent,\n    RecipeItemsComponent,\n    RecipeStartComponent,\n    RecipeEditComponent,\n\n  ],\n  imports: [SharedModule, RouterModule, ReactiveFormsModule,RecipesRoutingModule],\n})\nexport class RecipesModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Recipe } from '../../recipe.model';\nimport { RecipeService } from '../../recipe.service';\n\n@Component({\n  selector: 'app-recipe-items',\n  templateUrl: './recipe-items.component.html',\n  styleUrls: ['./recipe-items.component.css'],\n})\nexport class RecipeItemsComponent implements OnInit {\n  constructor(private recipeService: RecipeService) { }\n\n  @Input()\n  recipe: Recipe;\n\n  @Input()\n  index: number;\n\n  ngOnInit(): void { }\n\n}\n","<a\n  class=\"list-group-item clearfix mt-1\"\n  role=\"button\"\n  [routerLink]=\"[index]\"\n  routerLinkActive=\"active\"\n>\n  <div class=\"pull-left\">\n    <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n    <p class=\"list-group-item-text\">{{ recipe.description }}</p>\n  </div>\n  <span class=\"pull-right\">\n    <img\n      [src]=\"recipe.imagePath\"\n      alt=\"{{ recipe.name }}\"\n      class=\"img-responsive\"\n      style=\"max-height: 50px\"\n    />\n  </span>\n</a>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Please select a Recipe!</h3>\n","import {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromApp from '../store/app.reducer';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router, private store: Store<fromApp.AppState>) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    router: RouterStateSnapshot\r\n  ):\r\n    | boolean\r\n    | UrlTree\r\n    | Promise<boolean | UrlTree>\r\n    | Observable<boolean | UrlTree> {\r\n    // return this.authService.user.pipe(\r\n    return this.store.select('auth').pipe(\r\n      take(1),\r\n      map(authState => {\r\n        return authState.user;\r\n      }),\r\n      map(user => {\r\n        const isAuth = !!user;\r\n        if (isAuth) {\r\n          return true;\r\n        }\r\n        return this.router.createUrlTree(['/auth']);\r\n      })\r\n      // tap(isAuth => {\r\n      //   if (!isAuth) {\r\n      //     this.router.navigate(['/auth']);\r\n      //   }\r\n      // })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { Store } from '@ngrx/store';\nimport { map, switchMap } from 'rxjs/operators';\nimport * as fromApp from '../../store/app.reducer';\nimport * as RecipesActions from '../store/recipe.actions';\nimport * as ShoppingListActions from '../../shopping-list/store/shopping-list.actions';\n\n@Component({\n  selector: 'app-recipe-details',\n  templateUrl: './recipe-details.component.html',\n  styleUrls: ['./recipe-details.component.css']\n})\nexport class RecipeDetailsComponent implements OnInit {\n  recipe: Recipe;\n  id: number;\n\n  constructor(private recipeService: RecipeService, private store: Store<fromApp.AppState>, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.params\n      .pipe(\n        map(params => {\n          return +params['id'];\n        }),\n        switchMap(id => {\n          this.id = id;\n          return this.store.select('recipes');\n        }),\n        map(recipesState => {\n          return recipesState.recipes.find((recipe, index) => {\n            return index === this.id;\n          });\n        })\n      )\n      .subscribe(recipe => {\n        this.recipe = recipe;\n      });\n    // this.route.params\n    //   .subscribe(\n    //     (params: Params) => {\n    //       this.id = +params['id'];\n    //       this.recipe = this.recipeService.getRecipe(this.id);\n    //     }\n    //   );\n  }\n\n  onAddToShoppingList() {\n    this.store.dispatch(\n      new ShoppingListActions.AddIngredients(this.recipe.ingredients)\n    );\n    // this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\n  }\n  onEditRecipe() {\n    this.router.navigate(['edit'], { relativeTo: this.route });\n    // this.router.navigate(['../', this.id, 'edit'], {relativeTo: this.route});\n  }\n\n  onDeleteRecipe() {\n    this.store.dispatch(new RecipesActions.DeleteRecipe(this.id));\n    // this.recipeService.deleteRecipe(this.id);\n    this.router.navigate(['/recipes']);\n  }\n\n\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <img [src]=\"recipe?.imagePath\" alt=\"{{ recipe?.name }}\" class=\"img-responsive\" style=\"max-height: 300px;\">\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <h1>{{ recipe?.name }}</h1>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <div class=\"btn-group\" appDropdown>\n      <button type=\"button\" class=\"btn btn-primary dropdown-toggle\">\n        Manage Recipe <span class=\"caret\"></span>\n      </button>\n      <ul class=\"dropdown-menu\">\n        <li><a (click)=\"onAddToShoppingList()\" style=\"cursor: pointer;\">To Shopping List</a></li>\n        <li><a role='button' (click)=\"onEditRecipe()\">Edit Recipe</a></li>\n        <li><a role='button' (click)=\"onDeleteRecipe()\">Delete Recipe</a></li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    {{ recipe?.description }}\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\" *ngFor=\"let ingredient of recipe?.ingredients\">\n        {{ingredient?.name}} - {{ingredient?.amount}}\n\n      </li>\n    </ul>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from './recipe.model';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css'],\n\n})\nexport class RecipesComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n  selectedRecipe: Recipe;\n}\n","<div class=\"row\">\n  <div class=\"col-md-5\">\n    <app-recipe-list></app-recipe-list>\n  </div>\n  <div class=\"col-md-7\">\n    <router-outlet></router-outlet>\n    <!-- <app-recipe-details *ngIf=\"selectedRecipe; else infoText\" [recipe]=\"selectedRecipe\"></app-recipe-details>\n    <ng-template #infoText>\n      <p>Please select a Recipe!</p>\n    </ng-template> -->\n  </div>\n</div>\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport * as fromApp from '../../store/app.reducer';\nimport { Store } from '@ngrx/store';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css'],\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n  recipes: Recipe[];\n  subscription: Subscription;\n\n\n  constructor(\n    private recipeService: RecipeService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store<fromApp.AppState>\n  ) { }\n  ngOnInit() {\n    // this.subscription = this.recipeService.recipeChanged.subscribe(\n    //   (recipes: Recipe[]) => {\n    //     this.recipes = recipes;\n    //   }\n    // )\n    // this.recipes = this.recipeService.getRecipes();\n    this.subscription = this.store\n      .select('recipes')\n      .pipe(map(recipesState => recipesState.recipes))\n      .subscribe((recipes: Recipe[]) => {\n        this.recipes = recipes;\n      });\n  }\n\n  onNewRecipe() {\n    this.router.navigate(['new'], { relativeTo: this.route });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <button class=\"btn btn-success\" (click)=\"onNewRecipe()\">New Recipe</button>\n  </div>\n</div>\n<hr />\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <app-recipe-items\n      *ngFor=\"let recipeEl of recipes; let i = index\"\n      [recipe]=\"recipeEl\"\n      [index]=\"i\"\n    ></app-recipe-items>\n  </div>\n</div>\n","import { from } from 'rxjs';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RecipesComponent } from '../recipes.component';\r\nimport { AuthGuard } from 'src/app/auth/auth.guard';\r\nimport { RecipeStartComponent } from '../recipe-start/recipe-start.component';\r\nimport { RecipeEditComponent } from '../recipe-edit/recipe-edit.component';\r\nimport { RecipeDetailsComponent } from '../recipe-details/recipe-details.component';\r\nimport { RecipesResolverService } from '../recipes-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RecipesComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: RecipeStartComponent },\r\n      { path: 'new', component: RecipeEditComponent },\r\n      {\r\n        path: ':id',\r\n        component: RecipeDetailsComponent,\r\n        resolve: [RecipesResolverService],\r\n      },\r\n      {\r\n        path: ':id/edit',\r\n        component: RecipeEditComponent,\r\n        resolve: [RecipesResolverService],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RecipesRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\nimport { Store } from '@ngrx/store';\nimport { map } from 'rxjs/operators';\nimport * as fromApp from '../../store/app.reducer';\nimport { Subscription } from 'rxjs';\nimport * as RecipesActions from '../store/recipe.actions';\n\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css'],\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode = false;\n  recipeForm: FormGroup;\n  private storeSub: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipeService: RecipeService,\n    private router: Router,\n    private store: Store<fromApp.AppState>\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.editMode = params['id'] != null;\n      this.initForm();\n    });\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n    if (this.editMode) {\n      this.store\n        .select('recipes')\n        .pipe(\n          map(recipeState => {\n            return recipeState.recipes.find((recipe, index) => {\n              return index === this.id;\n            });\n          })\n        )\n        .subscribe(recipe => {\n          recipeName = recipe.name;\n          recipeImagePath = recipe.imagePath;\n          recipeDescription = recipe.description;\n          if (recipe['ingredients']) {\n            for (let ingredient of recipe.ingredients) {\n              recipeIngredients.push(\n                new FormGroup({\n                  name: new FormControl(ingredient.name, Validators.required),\n                  amount: new FormControl(ingredient.amount, [\n                    Validators.required,\n                    Validators.pattern(/^[1-9]+[0-9]*$/)\n                  ])\n                })\n              );\n            }\n          }\n        });\n    }\n    // if (this.editMode) {\n    //   const recipe = this.recipeService.getRecipe(this.id);\n    //   recipeName = recipe.name;\n    //   recipeImagePath = recipe.imagePath;\n    //   recipeDescription = recipe.description;\n\n    //   if (recipe['ingredients']) {\n    //     for (let ingredient of recipe.ingredients) {\n    //       recipeIngredients.push(\n    //         new FormGroup({\n    //           name: new FormControl(ingredient.name, Validators.required),\n    //           amount: new FormControl(ingredient.amount, [\n    //             Validators.required,\n    //             Validators.pattern(/^[1-9]+[0-9]*$/),\n    //           ]),\n    //         })\n    //       );\n    //     }\n    //   }\n    // }\n\n    this.recipeForm = new FormGroup({\n      name: new FormControl(recipeName, Validators.required),\n      imagePath: new FormControl(recipeImagePath, Validators.required),\n      description: new FormControl(recipeDescription, Validators.required),\n      ingredients: recipeIngredients,\n    });\n  }\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        name: new FormControl(null, Validators.required),\n        amount: new FormControl([null,\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/),\n        ]),\n      })\n    );\n  }\n  onSubmit() {\n    if (this.editMode) {\n      this.store.dispatch(\n        new RecipesActions.UpdateRecipe({\n          index: this.id,\n          newRecipe: this.recipeForm.value\n        })\n      );\n      // this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    }\n    else {\n      this.store.dispatch(new RecipesActions.AddRecipe(this.recipeForm.value));\n      // this.recipeService.addRecipe(this.recipeForm.value)\n    }\n    this.onCancel();\n  }\n  onCancel() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  get controls() {\n    return (<FormArray>this.recipeForm.get('ingredients'))?.controls;\n  }\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n  ngOnDestroy() {\n    if (this.storeSub) {\n      this.storeSub.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form [formGroup]=\"recipeForm\"  (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!recipeForm.valid\">Save</button>\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Name</label>\n                        <input type=\"text\" id=\"name\"  class=\"form-control\"  formControlName=\"name\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"imagePath\">Image URL</label>\n                        <input type=\"text\" id=\"imagePath\" class=\"form-control\"  formControlName=\"imagePath\" #imagePath>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <img [src]=\"imagePath.value\" class=\"img-responsive\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"description\">Description</label>\n                        <textarea name=\"comment\" id=\"description\" class=\"form-control\" rows=\"6\" formControlName=\"description\">Enter text here...</textarea>\n                        <!-- <textarea type=\"text\" id=\"description\" formControlName=\"name\" class=\"form-control\" rows=\"6\">\n                            </textarea> -->\n                    </div>\n                </div>\n            </div>\n<div class=\"row\">\n    <div class=\"col-xs-12\" formArrayName=\"ingredients\">\n        <div class=\"row\" *ngFor=\"let ingredientCtrl of controls; let i = index\"\n        [formGroupName]=\"i\" style=\"margin-top: 10px;\">\n            <div class=\"col-xs-8\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"name\" >\n            </div>\n            <div class=\"col-xs-2\">\n                <input type=\"number\" class=\"form-control\" formControlName=\"amount\" >\n            </div>\n            <div class=\"col-xs-2\">\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"onDeleteIngredient(i)\">X</button>\n            </div>\n        </div>  \n        <hr>\n        <div class=\"row\">\n            <div class=\"col-xs-12\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"onAddIngredient()\">Add Ingredient</button>\n            </div>\n        </div> \n    </div>\n</div>\n        </form>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}