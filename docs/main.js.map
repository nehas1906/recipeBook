{"version":3,"sources":["./src/app/auth/store/auth.actions.ts","./src/app/shared/placeholder/placeholder.directive.ts","./src/app/shared/dropdown.directive.ts","./src/app/shared/ingredient.model.ts","./src/environments/environment.ts","./src/app/shared/data-storage.service.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth-interceptor.service.ts","./src/app/auth/store/auth.effects.ts","./src/app/shared/shared.module.ts","./src/app/store/app.reducer.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/recipes/store/recipe.effects.ts","./src/app/shared/alert/alert.component.ts","./src/app/shared/alert/alert.component.html","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/shopping-list/store/shopping-list.reducer.ts","./src/app/recipes/recipe.service.ts","./src/app/auth/user.model.ts","./src/app/recipes/store/recipe.reducer.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/recipes/store/recipe.actions.ts","./src/app/core.module.ts","./src/app/shopping-list/shopping-list.service.ts","./src/app/auth/auth.service.ts","./src/app/auth/store/auth.reducer.ts","./src/app/shopping-list/store/shopping-list.actions.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/shared/loading-spinner/loading-spinner.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Action } from '@ngrx/store';\r\nexport const LOGIN_START = '[Auth] Login Start';\r\nexport const AUTHENTICATE_SUCCESS = '[Auth] Login';\r\nexport const AUTHENTICATE_FAIL = '[Auth] Login Fail';\r\nexport const SIGNUP_START = '[Auth] Signup Start';\r\nexport const CLEAR_ERROR = '[Auth] Clear Error';\r\nexport const AUTO_LOGIN = '[Auth] Auto Login';\r\nexport const LOGOUT = '[Auth] Logout';\r\n\r\nexport class AuthenticateSuccess implements Action {\r\n    readonly type = AUTHENTICATE_SUCCESS;\r\n\r\n    constructor(\r\n        public payload: {\r\n            email: string;\r\n            userId: string;\r\n            token: string;\r\n            expirationDate: Date;\r\n            redirect: boolean;\r\n        }\r\n    ) { }\r\n}\r\n\r\nexport class Logout implements Action {\r\n    readonly type = LOGOUT;\r\n}\r\n\r\nexport class LoginStart implements Action {\r\n    readonly type = LOGIN_START;\r\n    constructor(public payload: { email: string; password: string }) { }\r\n}\r\n\r\nexport class AuthenticateFail implements Action {\r\n    readonly type = AUTHENTICATE_FAIL;\r\n    constructor(public payload: string) { }\r\n}\r\n\r\nexport class SignupStart implements Action {\r\n    readonly type = SIGNUP_START;\r\n    constructor(public payload: { email: string; password: string }) { }\r\n}\r\n\r\nexport class ClearError implements Action {\r\n    readonly type = CLEAR_ERROR;\r\n}\r\n\r\nexport class AutoLogin implements Action {\r\n    readonly type = AUTO_LOGIN;\r\n}\r\n\r\nexport type AuthActions =\r\n    | AuthenticateSuccess\r\n    | Logout\r\n    | LoginStart\r\n    | AuthenticateFail\r\n    | SignupStart\r\n    | ClearError\r\n    | AutoLogin;\r\n\r\n\r\n\r\n// import { Action } from '@ngrx/store';\r\n\r\n// export const LOGIN_START = '[Auth] Login Start';\r\n// export const AUTHENTICATE_SUCCESS = '[Auth] Login';\r\n// export const AUTHENTICATE_FAIL = '[Auth] Login Fail';\r\n// export const SIGNUP_START = '[Auth] Signup Start';\r\n// export const CLEAR_ERROR = '[Auth] Clear Error';\r\n// export const AUTO_LOGIN = '[Auth] Auto Login';\r\n// export const LOGOUT = '[Auth] Logout';\r\n\r\n// export class Login implements Action {\r\n//     readonly type = LOGIN;\r\n\r\n//     constructor(\r\n//         public payload: {\r\n//             email: string;\r\n//             userId: string;\r\n//             token: string;\r\n//             expirationDate: Date;\r\n//         }\r\n//     ) { }\r\n// }\r\n\r\n// export class Logout implements Action {\r\n//     readonly type = LOGOUT;\r\n// }\r\n\r\n// export class LoginStart implements Action {\r\n//     readonly type = LOGIN_START;\r\n//     constructor(public payload: { email: string; password: string }) {\r\n//     }\r\n// }\r\n\r\n// export class LoginFail implements Action {\r\n//     readonly type = LOGIN_FAIL;\r\n\r\n//     constructor(public payload: string) { }\r\n// }\r\n\r\n// export type AuthActions = Login | Logout | LoginStart | LoginFail;\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appPlaceholder]'\r\n})\r\nexport class PlaceholderDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n}\r\n","import { Directive, HostListener, HostBinding,ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDropdown]'\r\n})\r\nexport class DropdownDirective {\r\n     constructor(private elRef: ElementRef) {}\r\n  @HostBinding('class.open') isOpen = false;\r\n\r\n  @HostListener('click') toggleOpen() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  // it will close dropdown if we'll close ffrom anywhere\r\n//     @HostListener('document:click', ['$event']) toggleOpen(event: Event) {\r\n//     this.isOpen = this.elRef.nativeElement.contains(event.target) ? !this.isOpen : false;\r\n//   }\r\n}\r\n","export class Ingredient{\r\n    constructor(public name: string,public amount:number){}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseAPIKey: 'AIzaSyC7TX4ZvPvATIH3EHGNVDMVfoguxiB8ux4',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { Recipe } from '../recipes/recipe.model';\r\nimport { RecipeService } from '../recipes/recipe.service';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport * as fromApp from '../store/app.reducer';\r\nimport * as RecipesActions from '../recipes/store/recipe.actions';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DataStorageService {\r\n  constructor(private http: HttpClient, private recipeService: RecipeService, private authService: AuthService, private store: Store<fromApp.AppState>) { }\r\n\r\n  storeRecipes() {\r\n    const recipes = this.recipeService.getRecipes();\r\n    this.http\r\n      .put(\r\n        'https://ng-course-recipe-book-9453e-default-rtdb.firebaseio.com/recipes.json',\r\n        recipes\r\n      )\r\n      .subscribe(response => {\r\n        console.log(response);\r\n      });\r\n  }\r\n\r\n  fetchRecipes() {\r\n    return this.http\r\n      .get<Recipe[]>(\r\n        'https://ng-course-recipe-book-9453e-default-rtdb.firebaseio.com/recipes.json'\r\n      )\r\n      .pipe(\r\n        map(recipes => {\r\n          return recipes.map(recipe => {\r\n            return {\r\n              ...recipe,\r\n              ingredients: recipe.ingredients ? recipe.ingredients : []\r\n            };\r\n          });\r\n        }),\r\n        tap(recipes => {\r\n          // this.recipeService.setRecipes(recipes);\r\n          this.store.dispatch(new RecipesActions.SetRecipes(recipes));\r\n        })\r\n      )\r\n  }\r\n}\r\n","import {\n  Component,\n  ComponentFactoryResolver,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { AuthService, AuthResponseData } from './auth.service';\nimport { AlertComponent } from '../shared/alert/alert.component';\nimport { PlaceholderDirective } from '../shared/placeholder/placeholder.directive';\nimport * as fromApp from '../store/app.reducer';\nimport * as AuthActions from './store/auth.actions';\n\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css'],\n})\n\n\nexport class AuthComponent implements OnInit {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private authService: AuthService,\n    private store: Store<fromApp.AppState>\n  ) { }\n  isLoginMode = true;\n  error: any = null;\n  isLoading = false;\n  @ViewChild(PlaceholderDirective, { static: false })\n  alertHost!: PlaceholderDirective;\n  private closeSub!: Subscription;\n  private storeSub: Subscription;\n  ngOnInit() {\n    this.storeSub = this.store.select('auth').subscribe((authState) => {\n      this.isLoading = authState.loading;\n      this.error = authState.authError;\n      if (this.error) {\n        this.showErrorAlert(this.error);\n      }\n    });\n  }\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n  // onSubmit(form: NgForm) {\n  //   if (!form.valid) {\n  //     return;\n  //   }\n  //   const email = form.value.email;\n  //   const password = form.value.password;\n\n  //   let authObs: Observable<AuthResponseData>;\n\n  //   this.isLoading = true;\n\n  //   if (this.isLoginMode) {\n  //     // authObs = this.authService.login(email, password);\n  //     this.store.dispatch(\n  //       new AuthActions.LoginStart({ email: email, password: password })\n  //     );\n  //   } else {\n  //     authObs = this.authService.signup(email, password);\n  //   }\n\n  //   // authObs.subscribe(\n  //   //   (resData) => {\n  //   //     console.log(resData);\n  //   //     this.isLoading = false;\n  //   //     this.router.navigate(['/recipes']);\n  //   //   },\n  //   //   (errorMessage) => {\n  //   //     console.log(errorMessage);\n  //   //     this.error = errorMessage;\n  //   //     this.showErrorAlert(errorMessage);\n  //   //     this.isLoading = false;\n  //   //   }\n  //   // );\n\n  //   form.reset();\n  //   // console.log(\"working\");\n\n  //   // if (!form.valid) {\n  //   //   return;\n  //   // }\n  //   // const email = form.value.email;\n  //   // const password = form.value.password;\n\n  //   // this.isLoading = true;\n  //   // if (this.isLoginMode) {\n  //   //   // ...\n  //   // } else {\n  //   //   this.authService.signup(email, password).subscribe(\n  //   //     resData => {\n  //   //       console.log(resData);\n  //   //      this.isLoading = false;\n  //   //     },\n  //   //     errorMessage => {\n  //   //       console.log(errorMessage);\n  //   //       this.error = errorMessage;\n  //   //       this.isLoading = false;\n  //   //     }\n  //   //   );\n  //   // }\n\n  //   // form.reset();\n  // }\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n\n    let authObs: Observable<AuthResponseData>;\n\n    this.isLoading = true;\n\n    if (this.isLoginMode) {\n      // authObs = this.authService.login(email, password);\n      this.store.dispatch(\n        new AuthActions.LoginStart({ email: email, password: password })\n      );\n    } else {\n      this.store.dispatch(\n        new AuthActions.SignupStart({ email: email, password: password })\n      );\n    }\n\n    // authObs.subscribe(\n    //   resData => {\n    //     console.log(resData);\n    //     this.isLoading = false;\n    //     this.router.navigate(['/recipes']);\n    //   },\n    //   errorMessage => {\n    //     console.log(errorMessage);\n    //     this.error = errorMessage;\n    //     this.showErrorAlert(errorMessage);\n    //     this.isLoading = false;\n    //   }\n    // );\n\n    form.reset();\n  }\n\n  onHandleError() {\n    this.store.dispatch(new AuthActions.ClearError());\n  }\n  private showErrorAlert(message: string) {\n    // const alertCmp = new AlertComponent();\n    const alertCmpFactory = this.componentFactoryResolver.resolveComponentFactory(\n      AlertComponent\n    );\n    const hostViewContainerRef = this.alertHost.viewContainerRef;\n    hostViewContainerRef.clear();\n\n    const componentRef = hostViewContainerRef.createComponent(alertCmpFactory);\n\n    componentRef.instance.message = message;\n    this.closeSub = componentRef.instance.close.subscribe(() => {\n      this.closeSub.unsubscribe();\n      hostViewContainerRef.clear();\n    });\n  }\n  ngOnDestroy() {\n    if (this.closeSub) {\n      this.closeSub.unsubscribe();\n    }\n  }\n}\n","<ng-template appPlaceholder></ng-template>\n<div class=\"row\">\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n        <!-- <app-alert\n              [message]=\"error\"\n              *ngIf=\"error\"\n              (close)=\"onHandleError()\"\n            ></app-alert> -->\n        <!-- <div class=\"alert alert-danger\" *ngIf=\"error\">\n            <p>{{ error }}</p>\n        </div> -->\n        <div *ngIf=\"isLoading\" style=\"text-align: center;\">\n            <app-loading-spinner></app-loading-spinner>\n        </div>\n        <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\">\n            <div class=\"form-group\">\n                <label for=\"email\">E-Mail</label>\n                <input type=\"email\" id=\"email\" class=\"form-control\" ngModel name=\"email\" required email/>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" class=\"form-control\" ngModel name=\"password\" required minlength=\"6\" />\n            </div>\n            <div>\n                <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!authForm.valid\">{{ isLoginMode ? 'Login' :'sign-up'}}</button> |\n                <button class=\"btn btn-primary\" (click)=\"onSwitchMode()\">Switch to {{ isLoginMode ? 'Sign Up' : 'Login' }}</button>\n            </div>\n        </form>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpParams\r\n} from '@angular/common/http';\r\nimport { take, exhaustMap, map } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromApp from '../store/app.reducer';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n  constructor(private authService: AuthService, private store: Store<fromApp.AppState>) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    // return this.authService.user.pipe(\r\n    return this.store.select('auth').pipe(\r\n      take(1),\r\n      map(authState => {\r\n        return authState.user;\r\n      }),\r\n      exhaustMap(user => {\r\n        if (!user) {\r\n          return next.handle(req);\r\n        }\r\n        const modifiedReq = req.clone({\r\n          params: new HttpParams().set('auth', user.token as any)\r\n        });\r\n        return next.handle(modifiedReq);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Actions, ofType, Effect, createEffect } from '@ngrx/effects';\r\nimport { switchMap, catchError, map, tap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport * as AuthActions from './auth.actions';\r\nimport { User } from '../user.model';\r\nimport { AuthService } from '../auth.service';\r\n\r\nexport interface AuthResponseData {\r\n    kind: string;\r\n    idToken: string;\r\n    email: string;\r\n    refreshToken: string;\r\n    expiresIn: string;\r\n    localId: string;\r\n    registered?: boolean;\r\n}\r\nconst handleAuthentication = (\r\n    expiresIn: number,\r\n    email: string,\r\n    userId: string,\r\n    token: string\r\n) => {\r\n    const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\r\n    const user = new User(email, userId, token, expirationDate);\r\n    localStorage.setItem('userData', JSON.stringify(user));\r\n    return new AuthActions.AuthenticateSuccess({\r\n        email: email,\r\n        userId: userId,\r\n        token: token,\r\n        expirationDate: expirationDate,\r\n        redirect: true,\r\n    });\r\n};\r\n\r\nconst handleError = (errorRes: any) => {\r\n    let errorMessage = 'An unknown error occurred!';\r\n    if (!errorRes.error || !errorRes.error.error) {\r\n        return of(new AuthActions.AuthenticateFail(errorMessage));\r\n    }\r\n    switch (errorRes.error.error.message) {\r\n        case 'EMAIL_EXISTS':\r\n            errorMessage = 'This email exists already';\r\n            break;\r\n        case 'EMAIL_NOT_FOUND':\r\n            errorMessage = 'This email does not exist.';\r\n            break;\r\n        case 'INVALID_PASSWORD':\r\n            errorMessage = 'This password is not correct.';\r\n            break;\r\n    }\r\n    return of(new AuthActions.AuthenticateFail(errorMessage));\r\n};\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n    authSignup = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AuthActions.SIGNUP_START),\r\n            switchMap((signupAction: AuthActions.SignupStart) => {\r\n                return this.http\r\n                    .post<AuthResponseData>(\r\n                        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=' + environment.firebaseAPIKey,\r\n                        {\r\n                            email: signupAction.payload.email,\r\n                            password: signupAction.payload.password,\r\n                            returnSecureToken: true,\r\n                        }\r\n                    )\r\n                    .pipe(\r\n                        tap((resData) => {\r\n                            this.authService.setLogoutTimer(+resData.expiresIn * 1000);\r\n                        }),\r\n                        map((resData) => {\r\n                            return handleAuthentication(\r\n                                +resData.expiresIn,\r\n                                resData.email,\r\n                                resData.localId,\r\n                                resData.idToken\r\n                            );\r\n                        }),\r\n                        catchError((errorRes) => {\r\n                            return handleError(errorRes);\r\n                        })\r\n                    );\r\n            })\r\n        )\r\n    );\r\n\r\n    autologin = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AuthActions.AUTO_LOGIN),\r\n            map(() => {\r\n                console.log(\"from store\");\r\n\r\n                const userData: {\r\n                    email: string;\r\n                    id: string;\r\n                    _token: string;\r\n                    _tokenExpirationDate: string;\r\n                } = JSON.parse(localStorage.getItem('userData'));\r\n                if (!userData) {\r\n                    return { type: 'DUMMY' };\r\n                }\r\n\r\n                const loadedUser = new User(\r\n                    userData.email,\r\n                    userData.id,\r\n                    userData._token,\r\n                    new Date(userData._tokenExpirationDate)\r\n                );\r\n\r\n                if (loadedUser.token) {\r\n                    // this.user.next(loadedUser);\r\n                    const expirationDuration =\r\n                        new Date(userData._tokenExpirationDate).getTime() -\r\n                        new Date().getTime();\r\n                    this.authService.setLogoutTimer(expirationDuration);\r\n                    return new AuthActions.AuthenticateSuccess({\r\n                        email: loadedUser.email,\r\n                        userId: loadedUser.id,\r\n                        token: loadedUser.token,\r\n                        expirationDate: new Date(userData._tokenExpirationDate),\r\n                        redirect: false,\r\n                    });\r\n\r\n                    // const expirationDuration =\r\n                    //   new Date(userData._tokenExpirationDate).getTime() -\r\n                    //   new Date().getTime();\r\n                    // this.autoLogout(expirationDuration);\r\n                }\r\n                return { type: 'DUMMY' };\r\n            })\r\n        )\r\n    );\r\n\r\n    authLogin = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AuthActions.LOGIN_START),\r\n            switchMap((authData: AuthActions.LoginStart) => {\r\n                return this.http\r\n                    .post<AuthResponseData>(\r\n                        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' + environment.firebaseAPIKey,\r\n                        {\r\n                            email: authData.payload.email,\r\n                            password: authData.payload.password,\r\n                            returnSecureToken: true,\r\n                        }\r\n                    )\r\n                    .pipe(\r\n                        tap((resData) => {\r\n                            this.authService.setLogoutTimer(+resData.expiresIn * 1000);\r\n                        }),\r\n                        map((resData) => {\r\n                            return handleAuthentication(\r\n                                +resData.expiresIn,\r\n                                resData.email,\r\n                                resData.localId,\r\n                                resData.idToken\r\n                            );\r\n                        }),\r\n                        catchError((errorRes) => {\r\n                            return handleError(errorRes);\r\n                        })\r\n                    );\r\n            })\r\n        )\r\n    );\r\n\r\n    authRedirect = createEffect(\r\n        () =>\r\n            this.actions$.pipe(\r\n                ofType(AuthActions.AUTHENTICATE_SUCCESS),\r\n                tap((authSuccessAction: AuthActions.AuthenticateSuccess) => {\r\n                    if (authSuccessAction.payload.redirect) {\r\n                        this.router.navigate(['/']);\r\n                    }\r\n\r\n                })\r\n            ),\r\n        { dispatch: false }\r\n    );\r\n\r\n    authLogout = createEffect(\r\n        () =>\r\n            this.actions$.pipe(\r\n                ofType(AuthActions.LOGOUT),\r\n                tap(() => {\r\n                    this.authService.clearLogoutTimer();\r\n                    localStorage.removeItem('userData');\r\n                    this.router.navigate(['/auth']);\r\n                })\r\n            ),\r\n        { dispatch: false }\r\n    );\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private http: HttpClient,\r\n        private router: Router,\r\n        private authService: AuthService\r\n    ) { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DropdownDirective } from './dropdown.directive';\r\nimport { LoadingSpinnerComponent } from './loading-spinner/loading-spinner.component';\r\nimport { AlertComponent } from './alert/alert.component';\r\nimport { PlaceholderDirective } from './placeholder/placeholder.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DropdownDirective,\r\n    LoadingSpinnerComponent,\r\n    AlertComponent,\r\n    PlaceholderDirective,\r\n  ],\r\n  exports: [\r\n    DropdownDirective,\r\n    LoadingSpinnerComponent,\r\n    AlertComponent,\r\n    PlaceholderDirective,\r\n    CommonModule\r\n  ],\r\n  imports: [CommonModule],\r\n})\r\nexport class SharedModule {}\r\n","import { ActionReducerMap } from '@ngrx/store';\r\n\r\nimport * as fromShoppingList from '../shopping-list/store/shopping-list.reducer';\r\nimport * as fromAuth from '../auth/store/auth.reducer';\r\nimport * as fromRecipes from '../recipes/store/recipe.reducer';\r\n\r\nexport interface AppState {\r\n    shoppingList: fromShoppingList.State;\r\n    auth: fromAuth.State;\r\n    recipes: fromRecipes.State;\r\n}\r\n\r\nexport const appReducer: ActionReducerMap<AppState> = {\r\n    shoppingList: fromShoppingList.shoppingListReducer,\r\n    auth: fromAuth.authReducer,\r\n    recipes: fromRecipes.recipeReducer,\r\n};\r\n","import { Component } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\nimport * as fromApp from './store/app.reducer';\nimport * as AuthActions from './auth/store/auth.actions';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'recipeBookAngular';\n  constructor(private authService: AuthService, private store: Store<fromApp.AppState>,) { }\n\n  ngOnInit() {\n    this.store.dispatch(new AuthActions.AutoLogin());\n  }\n\n}\n","<app-header ></app-header>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, Effect, ofType } from '@ngrx/effects';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { switchMap, map, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport * as RecipesActions from './recipe.actions';\r\nimport { Recipe } from '../recipe.model';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromApp from '../../store/app.reducer';\r\n\r\n@Injectable()\r\nexport class RecipeEffects {\r\n\r\n    fetchRecipes = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(RecipesActions.FETCH_RECIPES),\r\n            switchMap(() => {\r\n                return this.http.get<Recipe[]>(\r\n                    'https://ng-course-recipe-book-9453e-default-rtdb.firebaseio.com/recipes.json'\r\n                );\r\n            }),\r\n            map(recipes => {\r\n                return recipes.map(recipe => {\r\n                    return {\r\n                        ...recipe,\r\n                        ingredients: recipe.ingredients ? recipe.ingredients : []\r\n                    };\r\n                });\r\n            }),\r\n            map(recipes => {\r\n                return new RecipesActions.SetRecipes(recipes);\r\n            })\r\n        ))\r\n\r\n    storeRecipes = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(RecipesActions.STORE_RECIPES),\r\n            withLatestFrom(this.store.select('recipes')),\r\n            switchMap(([actionData, recipesState]) => {\r\n                return this.http.put(\r\n                    'https://ng-course-recipe-book-9453e-default-rtdb.firebaseio.com/recipes.json',\r\n                    recipesState.recipes\r\n                );\r\n            })\r\n        ),\r\n        { dispatch: false }\r\n\r\n\r\n    )\r\n\r\n    constructor(private actions$: Actions, private store: Store<fromApp.AppState>, private http: HttpClient) { }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  @Input() message: string;\n  @Output() close = new EventEmitter<void>();\n\n  onClose() {\n    this.close.emit();\n  }\n\n}\n","<div class=\"backdrop\" (click)=\"onClose()\"></div>\n<div class=\"alert-box\">\n    <p>{{ message }}</p>\n    <div class=\"alert-box-actions\">\n        <button class=\"btn btn-primary\" (click)=\"onClose()\">Close</button>\n    </div>\n</div>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AuthComponent } from './auth.component';\r\n\r\n\r\n@NgModule({\r\n    declarations:[AuthComponent],\r\n imports:[\r\n     CommonModule,\r\n     FormsModule,\r\n    RouterModule.forChild([ { path: '', component: AuthComponent }]),\r\n    SharedModule\r\n ]\r\n})\r\nexport class AuthModule {}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from './shared/shared.module';\nimport { CoreModule } from './core.module';\nimport { AuthModule } from './auth/auth.module';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromApp from './store/app.reducer';\nimport { AuthEffects } from './auth/store/auth.effects';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { RecipeEffects } from './recipes/store/recipe.effects';\n// import { StoreRouterConnectingModule } from '@ngrx/router-store/src/router_store_module';\n\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    SharedModule,\n    CoreModule,\n    AuthModule,\n    StoreModule.forRoot(fromApp.appReducer),\n    EffectsModule.forRoot([AuthEffects, RecipeEffects]),\n    StoreDevtoolsModule.instrument({ logOnly: environment.production }),\n    StoreRouterConnectingModule.forRoot(),\n    // StoreModule.forRoot(reducers)\n\n  ],\n  bootstrap: [AppComponent],\n  //  entryComponents: [\n  //   AlertComponent\n  // ]\n})\nexport class AppModule { }\n","import { Ingredient } from '../../shared/ingredient.model';\r\nimport * as ShoppingListActions from './shopping-list.actions';\r\n\r\nexport interface State {\r\n  ingredients: Ingredient[];\r\n  editedIngredient: Ingredient;\r\n  editedIngredientIndex: number;\r\n}\r\n\r\nconst initialState: State = {\r\n  ingredients: [new Ingredient('Apples', 5), new Ingredient('Tomatoes', 10)],\r\n  editedIngredient: null,\r\n  editedIngredientIndex: -1\r\n};\r\n\r\nexport function shoppingListReducer(\r\n  state: State = initialState,\r\n  action: ShoppingListActions.ShoppingListActions\r\n) {\r\n  switch (action.type) {\r\n    case ShoppingListActions.ADD_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: [...state.ingredients, action.payload]\r\n      };\r\n    case ShoppingListActions.ADD_INGREDIENTS:\r\n      return {\r\n        ...state,\r\n        ingredients: [...state.ingredients, ...action.payload]\r\n      };\r\n    case ShoppingListActions.UPDATE_INGREDIENT:\r\n      const ingredient = state.ingredients[state.editedIngredientIndex];\r\n      const updatedIngredient = {\r\n        ...ingredient,\r\n        ...action.payload\r\n      };\r\n      const updatedIngredients = [...state.ingredients];\r\n      updatedIngredients[state.editedIngredientIndex] = updatedIngredient;\r\n\r\n      return {\r\n        ...state,\r\n        ingredients: updatedIngredients,\r\n        editedIngredientIndex: -1,\r\n        editedIngredient: null\r\n      };\r\n    case ShoppingListActions.DELETE_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: state.ingredients.filter((ig, igIndex) => {\r\n          return igIndex !== state.editedIngredientIndex;\r\n        }),\r\n        editedIngredientIndex: -1,\r\n        editedIngredient: null\r\n      };\r\n    case ShoppingListActions.START_EDIT:\r\n      return {\r\n        ...state,\r\n        editedIngredientIndex: action.payload,\r\n        editedIngredient: { ...state.ingredients[action.payload] }\r\n      };\r\n    case ShoppingListActions.STOP_EDIT:\r\n      return {\r\n        ...state,\r\n        editedIngredient: null,\r\n        editedIngredientIndex: -1\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\nimport { Recipe } from './recipe.model';\nimport { Store } from '@ngrx/store';\nimport * as ShoppingListActions from '../shopping-list/store/shopping-list.actions';\nimport * as fromApp from '../store/app.reducer';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipeService {\n  recipeChanged = new Subject<Recipe[]>();\n  constructor(private slService: ShoppingListService, private store: Store<fromApp.AppState>) { }\n  // recipes: Recipe[] = [\n  //   new Recipe(\n  //     'Pizza',\n  //     'very testy',\n  //     'https://c.ndtvimg.com/2019-06/go4418h8_garlic-recipes-mushrooms-in-garlic-sauce_625x300_20_June_19.jpg',\n  //     [new Ingredient('noodles', 1), new Ingredient('veg kothe', 2)]\n  //   ),\n  //   new Recipe(\n  //     'veg kothe',\n  //     'very yummy',\n  //     'http://thetastyroom.com/wp-content/uploads/2015/01/veg_kothe2-1024x959.jpg',\n  //     [new Ingredient('noodles', 1), new Ingredient('veg kothe', 2)]\n  //   ),\n  // ];\n  private recipes: Recipe[] = [];\n\n  setRecipes(recipes: Recipe[]) {\n    this.recipes = recipes;\n    this.recipeChanged.next(this.recipes.slice());\n  }\n  getRecipes() {\n    return this.recipes.slice();\n  }\n\n  getRecipe(index: number) {\n    return this.recipes[index];\n  }\n\n  addIngredientsToShoppingList(ingredients: Ingredient[]) {\n    // this.slService.addIngredients(ingredients);\n    this.store.dispatch(new ShoppingListActions.AddIngredients(ingredients));\n  }\n\n  addRecipe(recipe: Recipe) {\n    this.recipes.push(recipe);\n    this.recipeChanged.next(this.recipes.slice());\n  }\n\n  updateRecipe(index: number, newRecipe: Recipe) {\n    this.recipes[index] = newRecipe;\n    this.recipeChanged.next(this.recipes.slice());\n  }\n  deleteRecipe(index: number) {\n    this.recipes.splice(index, 1);\n    this.recipeChanged.next(this.recipes.slice());\n  }\n}\n","export class User {\r\n  constructor(\r\n    public email: string,\r\n    public id: string,\r\n    private _token: string,\r\n    private _tokenExpirationDate: Date\r\n  ) {}\r\n\r\n  get token() {\r\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\r\n      return null;\r\n    }\r\n    return this._token;\r\n  }\r\n}\r\n","import { Recipe } from '../recipe.model';\r\nimport * as RecipesActions from './recipe.actions';\r\n\r\nexport interface State {\r\n    recipes: Recipe[];\r\n}\r\n\r\nconst initialState: State = {\r\n    recipes: []\r\n};\r\n\r\nexport function recipeReducer(\r\n    state = initialState,\r\n    action: RecipesActions.RecipesActions\r\n) {\r\n    switch (action.type) {\r\n        case RecipesActions.SET_RECIPES:\r\n            return {\r\n                ...state,\r\n                recipes: [...action.payload]\r\n            };\r\n        case RecipesActions.ADD_RECIPE:\r\n            return {\r\n                ...state,\r\n                recipes: [...state.recipes, action.payload]\r\n            };\r\n        case RecipesActions.UPDATE_RECIPE:\r\n            const updatedRecipe = {\r\n                ...state.recipes[action.payload.index],\r\n                ...action.payload.newRecipe\r\n            };\r\n\r\n            const updatedRecipes = [...state.recipes];\r\n            updatedRecipes[action.payload.index] = updatedRecipe;\r\n\r\n            return {\r\n                ...state,\r\n                recipes: updatedRecipes\r\n            };\r\n        case RecipesActions.DELETE_RECIPE:\r\n            return {\r\n                ...state,\r\n                recipes: state.recipes.filter((recipe, index) => {\r\n                    return index !== action.payload;\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport * as fromApp from '../store/app.reducer';\nimport * as AuthActions from '../auth/store/auth.actions';\nimport * as RecipeActions from '../recipes/store/recipe.actions'\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  collapsed = true;\n  isAuthenticated = false;\n  private userSub: Subscription;\n\n  constructor(private dataStorageService: DataStorageService, private authService: AuthService, private store: Store<fromApp.AppState>) { }\n\n\n  ngOnInit(): void {\n    // this.userSub = this.authService.user.subscribe(user => {\n    //   this.isAuthenticated = !!user;\n    //   console.log(!user);\n    //   console.log(!!user);\n    // });\n    this.userSub = this.store\n      .select('auth')\n      .pipe(map(authState => authState.user))\n      .subscribe(user => {\n        this.isAuthenticated = !!user;\n        console.log(!user);\n        console.log(!!user);\n      });\n\n\n  }\n  onLogOut() {\n    this.store.dispatch(new AuthActions.Logout());\n  }\n  onSaveData() {\n    // this.dataStorageService.storeRecipes();\n    this.store.dispatch(new RecipeActions.StoreRecipes());\n  }\n\n  onFetchData() {\n    // this.dataStorageService.fetchRecipes().subscribe();\n    this.store.dispatch(new RecipeActions.FetchRecipes());\n  }\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n  }\n}\n","<div class=\"navbar navbar-default\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <button\n        type=\"button\"\n        class=\"navbar-toggle\"\n        (click)=\"collapsed = !collapsed\"\n      >\n        <span class=\"icon-bar\" *ngFor=\"let iconBar of [1, 2, 3]\"></span>\n      </button>\n      <a routerLink=\"/\" class=\"navbar-brand\">Recipe Book</a>\n    </div>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"nav navbar-nav\">\n        <li>\n          <a\n            routerLinkActive=\"active\"\n            routerLink=\"/recipes\"\n            *ngIf=\"isAuthenticated\"\n            >Recipes</a\n          >\n        </li>\n        <li routerLinkActive=\"active\">\n          <a routerLink=\"/auth\" *ngIf=\"!isAuthenticated\">Authenticate</a>\n        </li>\n        <li>\n          <a routerLinkActive=\"active\" routerLink=\"/shopping-list\"\n            >Shopping List</a\n          >\n        </li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li>\n          <a\n            style=\"cursor: pointer\"\n            *ngIf=\"isAuthenticated\"\n            (click)=\"onLogOut()\"\n            >Log Out</a\n          >\n        </li>\n        <li class=\"dropdown\" appDropdown *ngIf=\"isAuthenticated\">\n          <a role=\"button\" class=\"dropdown-toggle\" role=\"button\"\n            >Manage <span class=\"caret\"></span\n          ></a>\n          <ul class=\"dropdown-menu\">\n            <li>\n              <a style=\"cursor: pointer\" (click)=\"onSaveData()\">Save Data</a>\n            </li>\n            <li>\n              <a style=\"cursor: pointer\" (click)=\"onFetchData()\">Fetch Data</a>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","import { Action } from '@ngrx/store';\r\n\r\nimport { Recipe } from '../recipe.model';\r\n\r\nexport const SET_RECIPES = '[Recipes] Set Recipes';\r\nexport const FETCH_RECIPES = '[Recipes] Fetch Recipes';\r\nexport const ADD_RECIPE = '[Recipe] Add Recipe';\r\nexport const UPDATE_RECIPE = '[Recipe] Update Recipe';\r\nexport const DELETE_RECIPE = '[Recipe] Delete Recipe';\r\nexport const STORE_RECIPES = '[Recipe] Store Recipes';\r\n\r\nexport class SetRecipes implements Action {\r\n    readonly type = SET_RECIPES;\r\n\r\n    constructor(public payload: Recipe[]) { }\r\n}\r\n\r\nexport class FetchRecipes implements Action {\r\n    readonly type = FETCH_RECIPES;\r\n}\r\n\r\nexport class AddRecipe implements Action {\r\n    readonly type = ADD_RECIPE;\r\n\r\n    constructor(public payload: Recipe) { }\r\n}\r\n\r\nexport class UpdateRecipe implements Action {\r\n    readonly type = UPDATE_RECIPE;\r\n\r\n    constructor(public payload: { index: number; newRecipe: Recipe }) { }\r\n}\r\n\r\nexport class DeleteRecipe implements Action {\r\n    readonly type = DELETE_RECIPE;\r\n\r\n    constructor(public payload: number) { }\r\n}\r\n\r\nexport class StoreRecipes implements Action {\r\n    readonly type = STORE_RECIPES;\r\n}\r\n\r\nexport type RecipesActions =\r\n    | SetRecipes\r\n    | FetchRecipes\r\n    | AddRecipe\r\n    | UpdateRecipe\r\n    | DeleteRecipe\r\n    | StoreRecipes;\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\r\nimport { RecipeService } from './recipes/recipe.service';\r\nimport { ShoppingListService } from './shopping-list/shopping-list.service';\r\n\r\n@NgModule({\r\n providers:[\r\n     ShoppingListService,RecipeService,{\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptorService,\r\n      multi: true\r\n    }\r\n ]\r\n})\r\nexport class CoreModule {}\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Ingredient } from '../shared/ingredient.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingListService {\n  ingredientsChanged = new Subject<Ingredient[]>();\n  startedEditing = new Subject<number>();\n   ingredients: Ingredient[] = [\n    new Ingredient('Apples', 5),\n    new Ingredient('Tomatoes', 10),\n  ];\n   getIngredients() {\n    return this.ingredients.slice();\n  }\n\n  getIngredient(index:number){\n    return this.ingredients[index];\n\n  }\n\n  addIngredient(ingredient: Ingredient) {\n    this.ingredients.push(ingredient);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  addIngredients(ingredients: Ingredient[]) {\n    this.ingredients.push(...ingredients);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  updateIngredient(index:number, newIngredient : Ingredient){\n      this.ingredients[index]=newIngredient;\n      this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  deleteIngredient(index : number){\n    this.ingredients.splice(index,1);\n    this.ingredientsChanged.next(this.ingredients.slice());\n\n  }\n\n  constructor() { }\n \n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { BehaviorSubject, Subject, throwError } from 'rxjs';\r\nimport { User } from './user.model';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromApp from '../store/app.reducer';\r\nimport * as AuthActions from './store/auth.actions';\r\n\r\nexport interface AuthResponseData {\r\n  kind: string;\r\n  idToken: string;\r\n  email: string;\r\n  refreshToken: string;\r\n  expiresIn: string;\r\n  localId: string;\r\n  registered?: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private tokenExpirationTimer: any;\r\n  constructor(private store: Store<fromApp.AppState>) { }\r\n  setLogoutTimer(expirationDuration: number) {\r\n    this.tokenExpirationTimer = setTimeout(() => {\r\n      this.store.dispatch(new AuthActions.Logout());\r\n    }, expirationDuration);\r\n  }\r\n\r\n  clearLogoutTimer() {\r\n    if (this.tokenExpirationTimer) {\r\n      clearTimeout(this.tokenExpirationTimer);\r\n      this.tokenExpirationTimer = null;\r\n    }\r\n  }\r\n\r\n  // signup(email: string, password: string) {\r\n  //   return this.http\r\n  //     .post<AuthResponseData>(\r\n  //       'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=' + en,\r\n  //       {\r\n  //         email: email,\r\n  //         password: password,\r\n  //         returnSecureToken: true\r\n  //       }\r\n  //     )\r\n  //     .pipe(\r\n  //       catchError(this.handleError),\r\n  //       tap(resData => {\r\n  //         this.handleAuthentication(\r\n  //           resData.email,\r\n  //           resData.localId,\r\n  //           resData.idToken,\r\n  //           +resData.expiresIn\r\n  //         );\r\n  //       })\r\n  //     );\r\n  // }\r\n\r\n  // login(email: string, password: string) {\r\n  //   return this.http\r\n  //     .post<AuthResponseData>(\r\n  //       'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC7TX4ZvPvATIH3EHGNVDMVfoguxiB8ux4',\r\n  //       {\r\n  //         email: email,\r\n  //         password: password,\r\n  //         returnSecureToken: true\r\n  //       }\r\n  //     ).pipe(\r\n  //       catchError(this.handleError),\r\n  //       tap(resData => {\r\n  //         this.handleAuthentication(\r\n  //           resData.email,\r\n  //           resData.localId,\r\n  //           resData.idToken,\r\n  //           +resData.expiresIn\r\n  //         );\r\n  //       })\r\n  //     );\r\n  // }\r\n\r\n  // autoLogin() {\r\n  //   const userData: {\r\n  //     email: string;\r\n  //     id: string;\r\n  //     _token: string;\r\n  //     _tokenExpirationDate: string;\r\n  //   } = JSON.parse(localStorage.getItem('userData') as any);\r\n  //   if (!userData) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   const loadedUser = new User(\r\n  //     userData.email,\r\n  //     userData.id,\r\n  //     userData._token,\r\n  //     new Date(userData._tokenExpirationDate)\r\n  //   );\r\n\r\n  //   if (loadedUser.token) {\r\n  //     //this.user.next(loadedUser);\r\n  //     this.store.dispatch(\r\n  //       new AuthActions.Login({\r\n  //         email: loadedUser.email,\r\n  //         userId: loadedUser.id,\r\n  //         token: loadedUser.token,\r\n  //         expirationDate: new Date(userData._tokenExpirationDate)\r\n  //       })\r\n  //     );\r\n  //     const expirationDuration =\r\n  //       new Date(userData._tokenExpirationDate).getTime() -\r\n  //       new Date().getTime();\r\n  //     this.autoLogout(expirationDuration);\r\n  //   }\r\n  // }\r\n\r\n\r\n  // logout() {\r\n  //   // this.user.next(null as any);\r\n  //   this.store.dispatch(new AuthActions.Logout());\r\n  //   this.router.navigate(['/auth']);\r\n  //   localStorage.removeItem('userData');\r\n  //   if (this.tokenExpirationTimer) {\r\n  //     clearTimeout(this.tokenExpirationTimer);\r\n  //   }\r\n  //   this.tokenExpirationTimer = null;\r\n  // }\r\n\r\n  // autoLogout(expirationDuration: number) {\r\n  //   this.tokenExpirationTimer = setTimeout(() => {\r\n  //     this.logout();\r\n  //   }, expirationDuration);\r\n  // }\r\n  // private handleAuthentication(\r\n  //   email: string,\r\n  //   userId: string,\r\n  //   token: string,\r\n  //   expiresIn: number\r\n  // ) {\r\n  //   const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\r\n  //   const user = new User(email, userId, token, expirationDate);\r\n  //   // this.user.next(user);\r\n  //   this.store.dispatch(\r\n  //     new AuthActions.Login({\r\n  //       email: email,\r\n  //       userId: userId,\r\n  //       token: token,\r\n  //       expirationDate: expirationDate\r\n  //     })\r\n  //   );\r\n  //   //localStorage.setItem('userData', JSON.stringify(user));\r\n  //   this.autoLogout(expiresIn * 1000);\r\n  //   localStorage.setItem('userData', JSON.stringify(user));\r\n  // }\r\n\r\n\r\n  // private handleError(errorRes: HttpErrorResponse) {\r\n  //   let errorMessage = 'An unknown error occurred!';\r\n  //   if (!errorRes.error || !errorRes.error.error) {\r\n  //     return throwError(errorMessage);\r\n  //   }\r\n  //   switch (errorRes.error.error.message) {\r\n  //     case 'EMAIL_EXISTS':\r\n  //       errorMessage = 'This email exists already';\r\n  //       break;\r\n  //     case 'EMAIL_NOT_FOUND':\r\n  //       errorMessage = 'This email does not exist.';\r\n  //       break;\r\n  //     case 'INVALID_PASSWORD':\r\n  //       errorMessage = 'This password is not correct.';\r\n  //       break;\r\n  //   }\r\n  //   return throwError(errorMessage);\r\n  // }\r\n}\r\n","import { User } from '../user.model';\r\nimport * as AuthActions from './auth.actions';\r\n\r\nexport interface State {\r\n    user: User;\r\n    authError: string;\r\n    loading: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n    user: null,\r\n    authError: null,\r\n    loading: false\r\n};\r\n\r\nexport function authReducer(\r\n    state = initialState,\r\n    action: AuthActions.AuthActions\r\n) {\r\n    switch (action.type) {\r\n        case AuthActions.AUTHENTICATE_SUCCESS:\r\n            const user = new User(\r\n                action.payload.email,\r\n                action.payload.userId,\r\n                action.payload.token,\r\n                action.payload.expirationDate\r\n            );\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n                user: user,\r\n                loading: false\r\n            };\r\n        case AuthActions.LOGOUT:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            };\r\n        case AuthActions.LOGIN_START:\r\n        case AuthActions.SIGNUP_START:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n                loading: true\r\n            };\r\n        case AuthActions.AUTHENTICATE_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                authError: action.payload,\r\n                loading: false\r\n            };\r\n        case AuthActions.CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { Ingredient } from '../../shared/ingredient.model';\r\n\r\nexport const ADD_INGREDIENT = '[Shopping List] Add Ingredient';\r\nexport const ADD_INGREDIENTS = '[Shopping List] Add Ingredients';\r\nexport const UPDATE_INGREDIENT = '[Shopping List] Update Ingredient';\r\nexport const DELETE_INGREDIENT = '[Shopping List] Delete Ingredient';\r\nexport const START_EDIT = '[Shopping List] Start Edit';\r\nexport const STOP_EDIT = '[Shopping List] Stop Edit';\r\nexport class AddIngredient implements Action {\r\n    readonly type = ADD_INGREDIENT;\r\n    constructor(public payload: Ingredient) { }\r\n}\r\n\r\nexport class AddIngredients implements Action {\r\n    readonly type = ADD_INGREDIENTS;\r\n\r\n    constructor(public payload: Ingredient[]) { }\r\n}\r\n\r\nexport class UpdateIngredient implements Action {\r\n    readonly type = UPDATE_INGREDIENT;\r\n\r\n    constructor(public payload: Ingredient) { }\r\n}\r\n\r\nexport class DeleteIngredient implements Action {\r\n    readonly type = DELETE_INGREDIENT;\r\n}\r\n\r\nexport class StartEdit implements Action {\r\n    readonly type = START_EDIT;\r\n\r\n    constructor(public payload: number) { }\r\n}\r\n\r\nexport class StopEdit implements Action {\r\n    readonly type = STOP_EDIT;\r\n}\r\n\r\nexport type ShoppingListActions =\r\n    | AddIngredient\r\n    | AddIngredients\r\n    | UpdateIngredient\r\n    | DeleteIngredient\r\n    | StartEdit\r\n    | StopEdit;\r\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/recipes', pathMatch: 'full' },\n   {\n    path: \"recipes\",\n    loadChildren: () =>\n      import(\"./recipes/recipes.module\").then(m => m.RecipesModule)\n  },\n   {\n    path: \"shopping-list\",\n    loadChildren: () =>\n      import(\"./shopping-list/shopping-list.module\").then(m => m.ShoppingListModule)\n  },\n   {\n    path: \"auth\",\n    loadChildren: () =>\n      import(\"./auth/auth.module\").then(m => m.AuthModule)\n  }\n \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{preloadingStrategy: PreloadAllModules})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  template:\r\n    '<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>',\r\n  styleUrls: ['./loading-spinner.component.css']\r\n})\r\nexport class LoadingSpinnerComponent {}\r\n"],"sourceRoot":"webpack:///"}