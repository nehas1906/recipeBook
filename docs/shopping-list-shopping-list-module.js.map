{"version":3,"sources":["./src/app/shopping-list/shopping-list.module.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html"],"names":[],"mappings":"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","file":"shopping-list-shopping-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShoppingEditComponent } from './shopping-edit/shopping-edit.component';\r\nimport { ShoppingListComponent } from './shopping-list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [ShoppingListComponent, ShoppingEditComponent],\r\n  exports: [ShoppingListComponent, ShoppingEditComponent],\r\n  imports: [\r\n    SharedModule,\r\n    FormsModule,\r\n    RouterModule.forChild([\r\n      { path: '', component: ShoppingListComponent },\r\n    ]),\r\n  ],\r\n})\r\nexport class ShoppingListModule {}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { Ingredient } from 'src/app/shared/ingredient.model';\nimport { ShoppingListService } from '../shopping-list.service';\nimport * as ShoppingListActions from '../store/shopping-list.actions'\nimport * as fromApp from '../../store/app.reducer';\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css'],\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n  @ViewChild('f') slform: NgForm;\n  constructor(private slService: ShoppingListService, private store: Store<fromApp.AppState>) { }\n  subscription: Subscription;\n  editMode = false;\n  editedItemIndex: number;\n  editedItem: Ingredient;\n\n  ngOnInit() {\n    this.subscription = this.store\n      .select('shoppingList')\n      .subscribe(stateData => {\n        if (stateData.editedIngredientIndex > -1) {\n          this.editMode = true;\n          this.editedItem = stateData.editedIngredient;\n          this.slform.setValue({\n            name: this.editedItem.name,\n            amount: this.editedItem.amount\n          });\n        } else {\n          this.editMode = false;\n        }\n      });\n    // this.subscription = this.slService.startedEditing.subscribe(\n    //   (index: number) => {\n    //     this.editedItemIndex = index;\n    //     this.editMode = true;\n    //     this.editedItem = this.slService.getIngredient(index);\n    //     this.slform.setValue({\n    //       name: this.editedItem.name,\n    //       amount: this.editedItem.amount,\n    //     });\n    //   }\n    // );\n  }\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n    if (this.editMode) {\n      // this.slService.updateIngredient(this.editedItemIndex, newIngredient);\n      this.store.dispatch(\n        new ShoppingListActions.UpdateIngredient(newIngredient)\n      );\n    } else {\n      // this.slService.addIngredient(newIngredient);\n      this.store.dispatch(new ShoppingListActions.AddIngredient(newIngredient));\n    }\n    this.editMode = false;\n    form.reset();\n  }\n  onClear() {\n    this.slform.reset();\n    this.editMode = false;\n    this.store.dispatch(new ShoppingListActions.StopEdit());\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.store.dispatch(new ShoppingListActions.StopEdit());\n  }\n  onDelete() {\n    // this.slService.deleteIngredient(this.editedItemIndex);\n    this.store.dispatch(new ShoppingListActions.DeleteIngredient());\n    this.onClear();\n\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-5 form-group\">\n          <label for=\"name\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            class=\"form-control\"\n            name=\"name\"\n            ngModel\n            required\n          />\n        </div>\n        <div class=\"col-sm-2 form-group\">\n          <label for=\"amount\">Amount</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            class=\"form-control\"\n            name=\"amount\"\n            ngModel\n            required\n            pattern=\"^[1-9]+[0-9]*$\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!f.valid\">{{editMode ? 'update' : 'Add'}}</button>\n          <button class=\"btn btn-danger\" type=\"button\" *ngIf=\"editMode\" (click)=\"onDelete()\">Delete</button>\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"onClear();\">Clear</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { state } from '@angular/animations';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { ShoppingListService } from './shopping-list.service';\nimport * as ShoppingListActions from './store/shopping-list.actions';\nimport * as fromApp from '../store/app.reducer';\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css'],\n})\nexport class ShoppingListComponent implements OnInit {\n\n  ingredients: Observable<{ ingredients: Ingredient[] }>;\n\n  // private igChangeSub: Subscription;\n\n  constructor(private slService: ShoppingListService, private store: Store<fromApp.AppState>) { }\n\n  ngOnInit() {\n    this.ingredients = this.store.select('shoppingList');\n    // this.ingredients = this.slService.getIngredients();\n    // this.igChangeSub = this.slService.ingredientsChanged.subscribe(\n    //   (ingredients: Ingredient[]) => {\n    //     this.ingredients = ingredients;\n    //   }\n    // );\n  }\n\n  // ngOnDestroy(): void {\n  //   this.igChangeSub.unsubscribe();\n  // }\n  onEditItem(index: number) {\n    this.slService.startedEditing.next(index);\n    this.store.dispatch(new ShoppingListActions.StartEdit(index));\n\n\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-10\">\n    <app-shopping-edit></app-shopping-edit>\n    <hr />\n    <ul class=\"list-group\">\n      <a\n        class=\"list-group-item\"\n        style=\"cursor: pointer\"\n       *ngFor=\"let ingredient of (ingredients | async).ingredients; let i = index\"\n        (click)=\"onEditItem(i)\"\n      >\n        {{ ingredient.name }} ({{ ingredient.amount }})\n      </a>\n    \n    </ul>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}